{"ast":null,"code":"export default {\n  name: 'AdminGoodsManage',\n  props: {\n    tableData: Array\n  },\n  data: function () {\n    return {\n      search: '',\n      dialogTitle: '',\n      editDialogVisible: false,\n      isAdd: false,\n      id: '',\n      rules: {\n        price: [{\n          required: true,\n          message: '请输入价格',\n          trigger: 'blur'\n        }, {\n          type: 'number',\n          min: 0,\n          max: 10000,\n          message: '价格必须为0-10000的整数',\n          trigger: 'blur'\n        }],\n        inventory: [{\n          required: true,\n          message: '请输入库存',\n          trigger: 'blur'\n        }, {\n          type: 'number',\n          min: 0,\n          max: 10000,\n          message: '价格必须为0-10000的整数',\n          trigger: 'blur'\n        }]\n      },\n      form: {\n        name: '',\n        remarks: '',\n        price: '',\n        inventory: ''\n      }\n    };\n  },\n  methods: {\n    // 提交表单\n    submitForm(form) {\n      this.$refs[form].validate(valid => {\n        if (valid) {\n          this.editDialogVisible = false;\n\n          if (this.isAdd === true) {\n            this.isAdd = false;\n            const params = new URLSearchParams();\n            params.append('price', this.form.price);\n            params.append('inventory', this.form.inventory);\n            params.append('name', this.form.name);\n            params.append('remarks', this.form.remarks);\n            this.$http.post('/api/goods/addGoods', params).then(() => {\n              // 向父组件请求更新数据\n              this.$emit('getData');\n              this.$message({\n                message: '添加成功',\n                type: 'success'\n              });\n            }).catch(error => {\n              console.log(error);\n              this.$message.error('添加失败');\n            });\n          } else {\n            const params = new URLSearchParams();\n            params.append('price', this.form.price);\n            params.append('inventory', this.form.inventory);\n            params.append('name', this.form.name);\n            params.append('remarks', this.form.remarks);\n            this.$http.post('/api/goods/addGoods', params);\n            this.$http.post('/api/manage/editGoods', params).then(() => {\n              this.$message({\n                message: '修改成功',\n                type: 'success'\n              });\n              this.$emit('getData');\n            }).catch(error => {\n              console.log(error);\n              this.$message.error('修改失败');\n            });\n          }\n        } else {\n          return false;\n        }\n      });\n    },\n\n    // 关闭表单\n    cancel(done) {\n      this.$confirm('确认关闭？').then(_ => {\n        this.isAdd = false;\n        this.editDialogVisible = false;\n        done();\n      }).catch(_ => {});\n    },\n\n    handleClose(done) {\n      this.$confirm('确认关闭？').then(_ => {\n        this.isAdd = false;\n        done();\n      }).catch(_ => {});\n    },\n\n    // 添加\n    handleAdd() {\n      // 初始化表单\n      this.dialogTitle = '添加';\n      this.form.name = '';\n      this.form.remarks = '';\n      this.form.price = '';\n      this.form.inventory = '';\n      this.editDialogVisible = true;\n      this.isAdd = true;\n    },\n\n    // 编辑\n    handleEdit(row) {\n      // 将表格数据传入表单\n      this.dialogTitle = '编辑';\n      this.form.name = row.name;\n      this.form.remarks = row.remarks;\n      this.form.price = row.price;\n      this.form.inventory = row.inventory;\n      this.editDialogVisible = true;\n    },\n\n    // 删除\n    handleDelete(row) {\n      this.$confirm('此操作将永久删除该项, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        // 发送请求，让数据库删除数据\n        const params = new URLSearchParams();\n        params.append('name', row.name);\n        this.$http.post('/api/goods/deleteID', params).then(() => {\n          // 向父组件请求更新数据\n          this.$emit('getData');\n          this.$message({\n            message: '删除成功',\n            type: 'success'\n          });\n        }).catch(error => {\n          console.log(error);\n          this.$message.error('删除失败');\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAwFA;EACAA,wBADA;EAEAC;IACAC;EADA,CAFA;EAKAC;IACA;MACAC,UADA;MAEAC,eAFA;MAGAC,wBAHA;MAIAC,YAJA;MAKAC,MALA;MAMAC;QACAC,QACA;UAAAC;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAC;UAAAJ;UAAAC;QAAA,CAFA,CADA;QAKAI,YACA;UAAAN;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAC;UAAAJ;UAAAC;QAAA,CAFA;MALA,CANA;MAgBAK;QACAlB,QADA;QAEAmB,WAFA;QAGAT,SAHA;QAIAO;MAJA;IAhBA;EAuBA,CA7BA;EA8BAG;IACA;IACAC;MACA;QACA;UACA;;UACA;YACA;YACA;YACAC;YACAA;YACAA;YACAA;YACA,+CACAC,IADA,CACA;cACA;cACA;cACA;gBACAX,eADA;gBAEAE;cAFA;YAIA,CARA,EASAU,KATA,CASAC;cACAC;cACA;YACA,CAZA;UAaA,CApBA,MAoBA;YACA;YACAJ;YACAA;YACAA;YACAA;YACA;YACA,iDACAC,IADA,CACA;cACA;gBACAX,eADA;gBAEAE;cAFA;cAIA;YACA,CAPA,EAQAU,KARA,CAQAC;cACAC;cACA;YACA,CAXA;UAYA;QACA,CA1CA,MA0CA;UACA;QACA;MACA,CA9CA;IA+CA,CAlDA;;IAmDA;IACAC;MACA,uBACAJ,IADA,CACAK;QACA;QACA;QACAC;MACA,CALA,EAMAL,KANA,CAMAI,OANA;IAOA,CA5DA;;IA6DAE;MACA,uBACAP,IADA,CACAK;QACA;QACAC;MACA,CAJA,EAKAL,KALA,CAKAI,OALA;IAMA,CApEA;;IAqEA;IACAG;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA,CA/EA;;IAgFA;IACAC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA,CAzFA;;IA0FA;IACAC;MACA;QACAC,uBADA;QAEAC,sBAFA;QAGArB;MAHA,GAIAS,IAJA,CAIA;QACA;QACA;QACAD;QACA,+CACAC,IADA,CACA;UACA;UACA;UACA;YACAX,eADA;YAEAE;UAFA;QAIA,CARA,EASAU,KATA,CASAC;UACAC;UACA;QACA,CAZA;MAaA,CArBA,EAqBAF,KArBA,CAqBA;QACA;UACAV,YADA;UAEAF;QAFA;MAIA,CA1BA;IA2BA;;EAvHA;AA9BA","names":["name","props","tableData","data","search","dialogTitle","editDialogVisible","isAdd","id","rules","price","required","message","trigger","type","min","max","inventory","form","remarks","methods","submitForm","params","then","catch","error","console","cancel","_","done","handleClose","handleAdd","handleEdit","handleDelete","confirmButtonText","cancelButtonText"],"sourceRoot":"src/views/salesman/manage","sources":["goods.vue"],"sourcesContent":["<template>\n    <div>\n        <el-container>\n            <el-main>\n                <!--修改框-->\n                <el-dialog\n                :title=dialogTitle\n                :visible.sync=\"editDialogVisible\"\n                :before-close=\"handleClose\"\n                width=\"50%\">\n                    <!--表单-->\n                    <el-form :model=\"form\" :rules=\"rules\" ref=\"form\" label-width=\"100px\">\n                        <el-form-item label=\"商品名\" prop=\"name\">\n                            <el-input v-model=\"form.name\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"备注\" prop=\"remarks\">\n                            <el-input v-model=\"form.remarks\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"价格\" prop=\"price\">\n                            <el-input v-model.number=\"form.price\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"库存\" prop=\"inventory\">\n                            <el-input v-model.number=\"form.inventory\"></el-input>\n                        </el-form-item>\n                    </el-form>\n                    <!--确定与取消-->\n                    <span slot=\"footer\" class=\"dialog-footer\">\n                        <el-button @click=\"cancel()\">取 消</el-button>\n                        <el-button type=\"primary\" @click=\"submitForm('form')\">确 定</el-button>\n                    </span>\n                </el-dialog>\n\n                <!--表格-->\n                <el-table\n                :data=\"tableData.filter(data => !search || data.name.toLowerCase().includes(search.toLowerCase()))\"\n                max-height = \"600\"\n                border\n                style=\"width: 100%\">\n                    <!--每行输出的内容-->\n                    <el-table-column\n                    label=\"商品名\"\n                    width=\"200\"\n                    prop=\"name\">\n                    </el-table-column>\n                    <el-table-column\n                    label=\"备注\"\n                    width=\"200\"\n                    prop=\"remarks\">\n                    </el-table-column>\n                    <el-table-column\n                    label=\"价格\"\n                    width=\"200\"\n                    prop=\"price\">\n                    </el-table-column>\n                    <el-table-column\n                    label=\"库存\"\n                    width=\"200\"\n                    prop=\"inventory\">\n                    </el-table-column>\n                    <el-table-column fixed=\"right\"\n                                     width=\"280\"\n                                     align=\"center\">\n                      <!--搜索框-->\n                      <template #header>\n                        <el-button size=\"mini\"\n                                   type=\"primary\"\n                                   class=\"add\"\n                                   @click=\"handleAdd()\">添加</el-button>\n                        <el-input v-model=\"search\"\n                                  placeholder=\"输入商品名搜索\"\n                                  style=\"width: 70%\"></el-input>\n                      </template>\n                      <!--编辑与删除按钮-->\n                      <template slot-scope=\"scope\">\n                        <el-button type=\"primary\"\n                                   @click=\"handleEdit(scope.row)\">修改</el-button>\n                        <el-button type=\"danger\"\n                                   @click=\"handleDelete(scope.row)\">删除</el-button>\n                      </template>\n                    </el-table-column>\n                </el-table>\n\n            </el-main>\n        </el-container>\n    </div>\n</template>\n\n<script>\n  export default {\n    name: 'AdminGoodsManage',\n    props: {\n      tableData: Array\n    },\n    data: function () {\n      return {\n        search: '',\n        dialogTitle: '',\n        editDialogVisible: false,\n        isAdd: false,\n        id: '',\n        rules: {\n          price: [\n            { required: true, message: '请输入价格', trigger: 'blur' },\n            { type: 'number', min: 0, max: 10000, message: '价格必须为0-10000的整数', trigger: 'blur' }\n          ],\n          inventory: [\n            { required: true, message: '请输入库存', trigger: 'blur' },\n            { type: 'number', min: 0, max: 10000, message: '价格必须为0-10000的整数', trigger: 'blur' }\n          ]\n        },\n        form: {\n          name: '',\n          remarks: '',\n          price: '',\n          inventory: ''\n        }\n      }\n    },\n    methods: {\n      // 提交表单\n      submitForm(form) {\n        this.$refs[form].validate((valid) => {\n          if (valid) {\n            this.editDialogVisible = false\n            if (this.isAdd === true) {\n              this.isAdd = false\n              const params = new URLSearchParams()\n              params.append('price', this.form.price)\n              params.append('inventory', this.form.inventory)\n              params.append('name', this.form.name)\n              params.append('remarks', this.form.remarks)\n              this.$http.post('/api/goods/addGoods', params)\n                .then(() => {\n                  // 向父组件请求更新数据\n                  this.$emit('getData')\n                  this.$message({\n                    message: '添加成功',\n                    type: 'success'\n                  })\n                })\n                .catch((error) => {\n                  console.log(error)\n                  this.$message.error('添加失败')\n                })\n            } else {\n              const params = new URLSearchParams()\n              params.append('price', this.form.price)\n              params.append('inventory', this.form.inventory)\n              params.append('name', this.form.name)\n              params.append('remarks', this.form.remarks)\n              this.$http.post('/api/goods/addGoods', params)\n              this.$http.post('/api/manage/editGoods', params)\n                .then(() => {\n                  this.$message({\n                    message: '修改成功',\n                    type: 'success'\n                  })\n                  this.$emit('getData')\n                })\n                .catch((error) => {\n                  console.log(error)\n                  this.$message.error('修改失败')\n                })\n            }\n          } else {\n            return false\n          }\n        })\n      },\n      // 关闭表单\n      cancel(done) {\n        this.$confirm('确认关闭？')\n          .then(_ => {\n            this.isAdd = false\n            this.editDialogVisible = false\n            done()\n          })\n          .catch(_ => { })\n      },\n      handleClose(done) {\n        this.$confirm('确认关闭？')\n          .then(_ => {\n            this.isAdd = false\n            done()\n          })\n          .catch(_ => { })\n      },\n      // 添加\n      handleAdd() {\n        // 初始化表单\n        this.dialogTitle = '添加'\n        this.form.name = ''\n        this.form.remarks = ''\n        this.form.price = ''\n        this.form.inventory = ''\n        this.editDialogVisible = true\n        this.isAdd = true\n      },\n      // 编辑\n      handleEdit(row) {\n        // 将表格数据传入表单\n        this.dialogTitle = '编辑'\n        this.form.name = row.name\n        this.form.remarks = row.remarks\n        this.form.price = row.price\n        this.form.inventory = row.inventory\n        this.editDialogVisible = true\n      },\n      // 删除\n      handleDelete(row) {\n        this.$confirm('此操作将永久删除该项, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          // 发送请求，让数据库删除数据\n          const params = new URLSearchParams()\n          params.append('name', row.name)\n          this.$http.post('/api/goods/deleteID', params)\n            .then(() => {\n              // 向父组件请求更新数据\n              this.$emit('getData')\n              this.$message({\n                message: '删除成功',\n                type: 'success'\n              })\n            })\n            .catch((error) => {\n              console.log(error)\n              this.$message.error('删除失败')\n            })\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          })\n        })\n      }\n\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}