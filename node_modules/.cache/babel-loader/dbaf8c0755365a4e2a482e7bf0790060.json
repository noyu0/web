{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nconst validPassword = (rule, value, callback) => {\n  const reg = /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{4,15}$/;\n\n  if (!reg.test(value)) {\n    callback(new Error('密码必须是由4-15位字母+数字组合'));\n  } else {\n    callback();\n  }\n};\n\nexport default {\n  name: 'LoginPage',\n\n  data() {\n    return {\n      editDialogVisible: false,\n      dialogTitle: '',\n      Lform: {\n        name: '',\n        password: ''\n      },\n      form: {\n        userid: '',\n        password: ''\n      },\n      id: [],\n      isWrong: true,\n      rules: {\n        userid: [{\n          required: true,\n          message: '请输入用户ID',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 20,\n          message: '长度在 1 到 20 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          validator: validPassword,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n\n  methods: {\n    login() {\n      if (this.Lform.name === '' || this.Lform.password === '') {\n        this.$message.error('请输入用户名和密码');\n      } else {\n        this.$http.get('/api/lar/getID').then(res => {\n          this.id = res.data.data;\n\n          for (let i = 0; i < this.id.length; i++) {\n            if (this.id[i].userid === this.Lform.name && this.id[i].password === this.Lform.password) {\n              this.isWrong = false; // 在这进入对应账号的页面\n\n              if (this.id[i].identity === '用户') {\n                this.$router.push({\n                  name: 'user'\n                });\n              } else if (this.id[i].identity === '销售人员') {\n                this.$router.push({\n                  name: 'salesman'\n                });\n              } else if (this.id[i].identity === '管理员') {\n                this.$router.push({\n                  name: 'admin'\n                });\n              }\n\n              this.$store.commit('changeid', this.id[i].userid);\n            }\n          }\n\n          if (this.isWrong === true) {\n            this.$message.error('用户名或密码错误');\n          }\n\n          this.isWrong = true;\n        });\n      }\n    },\n\n    register() {\n      // 初始化表单\n      this.dialogTitle = '注册';\n      this.form.userid = '';\n      this.form.password = '';\n      this.editDialogVisible = true;\n    },\n\n    // 关闭表单\n    cancel(done) {\n      this.$confirm('确认关闭？').then(_ => {\n        this.editDialogVisible = false;\n        done();\n      }).catch(_ => {});\n    },\n\n    handleClose(done) {\n      this.$confirm('确认关闭？').then(_ => {\n        done();\n      }).catch(_ => {});\n    },\n\n    submitForm(form) {\n      this.$refs[form].validate(valid => {\n        if (valid) {\n          this.editDialogVisible = false; // 发送请求，让数据库添加新用户ID\n\n          const params = new URLSearchParams();\n          params.append('userid', this.form.userid);\n          params.append('password', this.form.password);\n          this.$http.post('/api/lar/addID', params).then(() => {\n            this.$message({\n              message: '注册成功',\n              type: 'success'\n            });\n          }).catch(error => {\n            console.log(error);\n            this.$message.error('注册失败');\n          });\n        } else {\n          return false;\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":";;AA0CA;EACA;;EACA;IACAA;EACA,CAFA,MAEA;IACAA;EACA;AACA,CAPA;;AASA;EACAC,iBADA;;EAEAC;IACA;MACAC,wBADA;MAEAC,eAFA;MAGAC;QACAJ,QADA;QAEAK;MAFA,CAHA;MAOAC;QACAC,UADA;QAEAF;MAFA,CAPA;MAWAG,MAXA;MAYAC,aAZA;MAaAC;QACAH,SACA;UAAAI;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,CAFA,CADA;QAKAR,WACA;UAAAM;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAG;UAAAH;QAAA,CAFA;MALA;IAbA;EAwBA,CA3BA;;EA4BAI;IACAC;MACA;QACA;MACA,CAFA,MAEA;QACA,iCACAC,IADA,CACAC;UACA;;UACA;YACA;cACA,qBADA,CAEA;;cACA;gBACA;kBAAApB;gBAAA;cACA,CAFA,MAEA;gBACA;kBAAAA;gBAAA;cACA,CAFA,MAEA;gBACA;kBAAAA;gBAAA;cACA;;cACA;YACA;UACA;;UACA;YACA;UACA;;UACA;QACA,CArBA;MAsBA;IACA,CA5BA;;IA6BAqB;MACA;MACA;MACA;MACA;MACA;IACA,CAnCA;;IAoCA;IACAC;MACA,uBACAH,IADA,CACAI;QACA;QACAC;MACA,CAJA,EAKAC,KALA,CAKAF,OALA;IAMA,CA5CA;;IA6CAG;MACA,uBACAP,IADA,CACAI;QACAC;MACA,CAHA,EAIAC,KAJA,CAIAF,OAJA;IAKA,CAnDA;;IAoDAI;MACA;QACA;UACA,+BADA,CAEA;;UACA;UACAC;UACAA;UACA,0CACAT,IADA,CACA;YACA;cACAP,eADA;cAEAiB;YAFA;UAIA,CANA,EAOAJ,KAPA,CAOAK;YACAC;YACA;UACA,CAVA;QAWA,CAjBA,MAiBA;UACA;QACA;MACA,CArBA;IAsBA;;EA3EA;AA5BA","names":["callback","name","data","editDialogVisible","dialogTitle","Lform","password","form","userid","id","isWrong","rules","required","message","trigger","min","max","validator","methods","login","then","res","register","cancel","_","done","catch","handleClose","submitForm","params","type","error","console"],"sourceRoot":"src/views/login","sources":["index.vue"],"sourcesContent":["<template>\n    <div class=\"bg\">\n      <el-dialog\n          :title=dialogTitle\n          :visible.sync=\"editDialogVisible\"\n          :before-close=\"handleClose\"\n          width=\"50%\">\n              <!--表单-->\n              <el-form :model=\"form\" :rules=\"rules\" ref=\"form\" label-width=\"100px\">\n                  <el-form-item label=\"用户ID\" prop=\"userid\">\n                      <el-input v-model=\"form.userid\"></el-input>\n                  </el-form-item>\n                  <el-form-item label=\"密码\" prop=\"password\">\n                      <el-input v-model=\"form.password\"></el-input>\n                  </el-form-item>\n              </el-form>\n              <!--确定与取消-->\n              <span slot=\"footer\" class=\"dialog-footer\">\n                  <el-button @click=\"cancel()\">取 消</el-button>\n                  <el-button type=\"primary\" @click=\"submitForm('form')\">确 定</el-button>\n              </span>\n          </el-dialog>\n\n        <div class=\"info_area\">\n            <div class=\"title\">电子商务系统</div>\n            <el-form :model=\"Lform\" label-width=\"80px\" class=\"form\">\n                <el-input v-model=\"Lform.name\"\n                placeholder=\"用户名\"\n                type=\"name\"\n                class=\"input\"></el-input>\n                <el-input v-model=\"Lform.password\"\n                placeholder=\"密码\"\n                type=\"password\"\n                class=\"input\"></el-input>\n            </el-form>\n            <div class=\"btn\" @click=\"login()\">登录</div>\n            <div class=\"btn\" @click=\"register()\">注册</div>\n        </div>\n    </div>\n</template>\n\n<script>\nconst validPassword = (rule, value, callback) => {\n  const reg = /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{4,15}$/\n  if (!reg.test(value)) {\n    callback(new Error('密码必须是由4-15位字母+数字组合'))\n  } else {\n    callback()\n  }\n}\n\nexport default {\n  name: 'LoginPage',\n  data () {\n    return {\n      editDialogVisible: false,\n      dialogTitle: '',\n      Lform: {\n        name: '',\n        password: ''\n      },\n      form: {\n        userid: '',\n        password: ''\n      },\n      id: [],\n      isWrong: true,\n      rules: {\n        userid: [\n          { required: true, message: '请输入用户ID', trigger: 'blur' },\n          { min: 1, max: 20, message: '长度在 1 到 20 个字符', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n          { validator: validPassword, trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    login () {\n      if (this.Lform.name === '' || this.Lform.password === '') {\n        this.$message.error('请输入用户名和密码')\n      } else {\n        this.$http.get('/api/lar/getID')\n          .then((res) => {\n            this.id = res.data.data\n            for (let i = 0; i < this.id.length; i++) {\n              if (this.id[i].userid === this.Lform.name && this.id[i].password === this.Lform.password) {\n                this.isWrong = false\n                // 在这进入对应账号的页面\n                if (this.id[i].identity === '用户') {\n                  this.$router.push({ name: 'user' })\n                } else if (this.id[i].identity === '销售人员') {\n                  this.$router.push({ name: 'salesman' })\n                } else if (this.id[i].identity === '管理员') {\n                  this.$router.push({ name: 'admin' })\n                }\n                this.$store.commit('changeid', this.id[i].userid)\n              }\n            }\n            if (this.isWrong === true) {\n              this.$message.error('用户名或密码错误')\n            }\n            this.isWrong = true\n          })\n      }\n    },\n    register () {\n      // 初始化表单\n      this.dialogTitle = '注册'\n      this.form.userid = ''\n      this.form.password = ''\n      this.editDialogVisible = true\n    },\n    // 关闭表单\n    cancel (done) {\n      this.$confirm('确认关闭？')\n        .then(_ => {\n          this.editDialogVisible = false\n          done()\n        })\n        .catch(_ => {})\n    },\n    handleClose (done) {\n      this.$confirm('确认关闭？')\n        .then(_ => {\n          done()\n        })\n        .catch(_ => {})\n    },\n    submitForm (form) {\n      this.$refs[form].validate((valid) => {\n        if (valid) {\n          this.editDialogVisible = false\n          // 发送请求，让数据库添加新用户ID\n          const params = new URLSearchParams()\n          params.append('userid', this.form.userid)\n          params.append('password', this.form.password)\n          this.$http.post('/api/lar/addID', params)\n            .then(() => {\n              this.$message({\n                message: '注册成功',\n                type: 'success'\n              })\n            })\n            .catch((error) => {\n              console.log(error)\n              this.$message.error('注册失败')\n            })\n        } else {\n          return false\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n    .bg {\n        background-color: rgb(243, 233, 233);\n        height: 100%;\n    }\n    .info_area {\n        height: 360px;\n        width: 480px;\n        position: relative;\n        left: 50%;\n        top: 50%;\n        border-radius: 15px;\n        background-color: rgb(192, 218, 241);\n        transform: translate(-50%, -50%);\n    }\n    .title {\n        width: 100%;\n        text-align: center;\n        font-size: 35px;\n        padding: 50px 0 0 0;\n    }\n    .form {\n        padding: 30px 20px 0 20px;\n    }\n    .input {\n        margin-top: 10px;\n        margin-bottom: 5px;\n    }\n    .btn {\n        margin-top: 10px;\n        width: 380px;\n        margin-left: 50px;\n        margin-right: 50px;\n        height: 35px;\n        border-radius: 10px;\n        border: 0;\n        color: #fff;\n        text-align: center;\n        line-height: 30px;\n        font-size: 15px;\n        background-image: linear-gradient(to right, #30cfd0, #330867);\n    }\n</style>\n"]},"metadata":{},"sourceType":"module"}